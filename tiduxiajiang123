import matplotlib.pyplot as plt
#数据调递增的一次函数
x = [150,200,250,300,350,400,600]
y = [6450,7450,8450,9450,11450,15450,18450]
#步长
alpha = 0.00001
#计算样本个数
m = len(x)
#初始化参数的值，拟合函数为 y=theta0+theta1*x
theta0 = 0
theta1 = 0
#误差
error0=0
error1=0
#退出迭代的两次误差差值的阈值
epsilon=0.000001

def h(x):
    return theta1*x+theta0
#开始迭代
while True:
    diff = [0,0]
    #梯度下降
    for i in range(m):
        diff[0]+=h(x[i])-y[i]#对theta0求导
        diff[1]+=(h(x[i])-y[i])*x[i]#对theta1求导
    theta0=theta0-alpha/m*diff[0]
    theta1=theta1-alpha/m*diff[1]
    error1=0
    #计算两次迭代的误差的差值，小于阈值则退出迭代，输出拟合结果
    for i in range(len(x)):
        error1 += (y[i] - (theta0 + theta1 * x[i])) ** 2 / 2
    if abs(error1 - error0) < epsilon:
        break
    else:
        error0 = error1
plt.plot(x,[h(x) for x in x])
plt.plot(x,y,'bo')
print(theta1,theta0)
plt.show()

